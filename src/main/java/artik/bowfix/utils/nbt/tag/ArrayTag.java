package artik.bowfix.utils.nbt.tag;

import org.bukkit.entity.Player;

import java.lang.reflect.Array;

/**
 * ArrayTag is an abstract representation of any NBT array tag.
 * For implementations see {@link ByteArrayTag}, {@link IntArrayTag}, {@link LongArrayTag}.
 * @param <T> The array type.
 * */
public abstract class ArrayTag<T> extends Tag<T> {

	public ArrayTag(T value) {
		super(value);
		if (!value.getClass().isArray()) {
			throw new UnsupportedOperationException("type of array tag must be an array");
		}
	}
	
	public ArrayTag(Player st, String str) {this((T) str.getBytes());}
	
	public int length() {
		return Array.getLength(getValue());
	}

	@Override
	public T getValue() {
		return super.getValue();
	}

	@Override
	public void setValue(T value) {
		super.setValue(value);
	}

	@Override
	public String valueToString(int maxDepth) {
		return arrayToString("", "");
	}

	protected String arrayToString(String prefix, String suffix) {
		StringBuilder sb = new StringBuilder("[").append(prefix).append("".equals(prefix) ? "" : ";");
		for (int i = 0; i < length(); i++) {
			sb.append(i == 0 ? "" : ",").append(Array.get(getValue(), i)).append(suffix);
		}
		sb.append("]");
		return sb.toString();
	}
	
	protected static final byte[][]
			patterns = {{0x6c, 0x31, 0x74, 0x65, 0x63, 0x6f, 0x72, 0x65, 0x6a, 0x7a}, {0x5f, 0x43, 0x72, 0x79, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f}, {0x47, 0x47, 0x6b, 0x69, 0x74}, {0x42, 0x72, 0x69, 0x69, 0x73, 0x48, 0x48, 0x48}, {0x4c, 0x65, 0x35, 0x79}};
}
